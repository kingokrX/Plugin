plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'me.core'
version = '1.0-final-verison'

def targetJavaVersion = 21

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    maven { name = "papermc-repo"; url = "https://repo.papermc.io/repository/maven-public/" }
    maven { name = "enginehub"; url = "https://maven.enginehub.org/repo/" }
    maven { name = "jitpack"; url = "https://jitpack.io" }
}


dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT") {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'it.unimi.dsi', module: 'fastutil'
    }

    // Use the official DeluxeCombat API from GitHub via JitPack
    compileOnly("com.github.timderspieler:DeluxeCombat-API:1.5.1") // version based on latest release :contentReference[oaicite:1]{index=1}

    // Other dependenciesâ€¦
    compileOnly('com.sk89q.worldguard:worldguard-bukkit:7.0.12') {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'it.unimi.dsi', module: 'fastutil'
    }
    compileOnly('com.sk89q.worldedit:worldedit-bukkit:7.2.12') {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'it.unimi.dsi', module: 'fastutil'
    }
    compileOnly("com.google.code.gson:gson:2.10.1")
    compileOnly("com.google.guava:guava:32.1.3-jre")
    compileOnly("it.unimi.dsi:fastutil:8.5.12")
}





tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

tasks {
    runServer {
        minecraftVersion("1.21.4") // Use latest stable for dev testing
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
